config {
  type: "table",
  schema: dataform.projectConfig.vars.BASE_DATA,
  description: "Contains a conformed product category hierarchy for each `product_code` grouping",
  assertions: {
    uniqueKey: ["product_code"],
    nonNull: ["product_code"]
  },
  tags: ["TRANSFORM_RETAIL_DATA"]
}


SELECT
    product_code
  , prod_name
  , product_group_name
  , product_type_name
  , index_group_name
  , index_name
  , section_name
  , garment_group_name
  , CASE WHEN     product_group_name = "Unknown"
              AND product_type_name = "Unknown"
         THEN FORMAT("%s > %s", section_name, garment_group_name)
         WHEN     garment_group_name = product_group_name
               OR garment_group_name = product_type_name
               OR garment_group_name IN ("Unknown", "Under-, Nightwear")
         THEN FORMAT("%s > %s > %s", section_name, product_group_name, product_type_name)
         ELSE FORMAT("%s > %s > %s > %s", section_name, product_group_name, product_type_name, garment_group_name)
    END AS product_category
  , detail_desc
FROM (SELECT
          product_code
        , REGEXP_REPLACE(INITCAP(prod_name), r'\([^)]*\)', "") AS prod_name
        , REPLACE(INITCAP(product_group_name), ">", "-") AS product_group_name
        , REPLACE(INITCAP(product_type_name), ">", "-") AS product_type_name
        , REPLACE(INITCAP(index_group_name), ">", "-") AS index_group_name
        , REPLACE(INITCAP(index_name), ">", "-") AS index_name
        , REPLACE(INITCAP(section_name), ">", "-") AS section_name
        , REPLACE(INITCAP(garment_group_name), ">", "-") AS garment_group_name
        , detail_desc
      FROM ${ ref({ schema: dataform.projectConfig.vars.BASE_DATA, name: "articles" }) }
      QUALIFY ROW_NUMBER() OVER (PARTITION BY product_code
                                 ORDER BY article_id DESC) = 1) AS dt