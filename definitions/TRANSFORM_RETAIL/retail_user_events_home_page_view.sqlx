config {
  hasOutput: true,
  type: "operations",
  schema: dataform.projectConfig.vars.TARGET_DATA,
  description: "The Retail User Events capture all metadata information the Retail API needs to know about how end users interact with the website.",
  dependOnDependencyAssertions: true,
  tags: ["TRANSFORM_RETAIL_DATA"]
}


CREATE OR REPLACE TABLE ${ self() }
(
    eventType                          STRING NOT NULL
  , visitorId                          STRING NOT NULL
  , sessionId                          STRING
  , eventTime                          STRING NOT NULL
  , experimentIds                      ARRAY<STRING>
  , attributionToken                   STRING
  , userInfo                           STRUCT
      <
          userId                       STRING
        , ipAddress                    STRING
        , userAgent                    STRING
        , directUserRequest            BOOLEAN
      >
  , uri                                STRING
  , referrerUri                        STRING
  , pageViewId                         STRING
  , entity                             STRING
)
AS
SELECT
    "home-page-view" AS eventType
  , t.customer_id AS visitorId
  , FORMAT("%s-%s", t.customer_id, t.transaction_id) AS sessionId
  , FORMAT_DATE('%Y-%m-%dT11:45:00.000Z', t.transaction_date) AS eventTime
  , [] AS experimentIds
  , CAST(NULL AS STRING) AS attributionToken
  , STRUCT(t.customer_id AS userId
         , CAST(NULL AS STRING) AS ipAddress
         , CAST(NULL AS STRING) AS userAgent
         , CAST(NULL AS BOOLEAN) AS directUserRequest) AS userInfo
  , "https://www2.hm.com/en_us/" AS uri
  , CAST(NULL AS STRING) AS referrerUri
  , CAST(NULL AS STRING) AS pageViewId
  , "hm.com" AS entity
FROM ${ ref({ schema: dataform.projectConfig.vars.TARGET_DATA, name: "transactions" }) } AS t
WHERE t.line_item = 1
