config {
  hasOutput: true,
  type: "operations",
  schema: dataform.projectConfig.vars.BASE_DATA,
  description: "The Retail API Product Catalog is a collection of Product objects and associated metadata",
  tags: ["TRANSFORM_RETAIL_DATA"]
}


CREATE OR REPLACE TABLE ${ self() }
(
    id                       STRING              NOT NULL
  , type                     STRING
  , primaryProductId         STRING
  , categories               ARRAY<STRING>
  , title                    STRING              NOT NULL
  , description              STRING
  , languageCode             STRING
  , priceInfo                STRUCT
      <
          currencyCode       STRING
        , price              FLOAT64
        , originalPrice      FLOAT64
      >
  , availability             STRING
)
OPTIONS(description="The Retail API Product Catalog is a collection of Product objects and associated metadata")
AS
SELECT
    pc.product_code AS id
  , "PRIMARY" AS type
  , pc.product_code AS primaryProductId
  , [ product_category ] AS categories
  , pc.prod_name AS title
  , pc.detail_desc AS description
  , "en" AS languageCode
  , IF(ppi.product_code IS NULL, NULL, STRUCT(ppi.currencyCode, ppi.current_price AS price, ppi.max_price as originalPrice)) AS priceInfo
  , IF(ppi.product_code IS NULL, "OUT_OF_STOCK", "IN_STOCK") AS availability
FROM ${ ref({ schema: dataform.projectConfig.vars.BASE_DATA, name: "product_category" }) } AS pc
  LEFT OUTER JOIN ${ ref({ schema: dataform.projectConfig.vars.BASE_DATA, name: "product_price_info" }) } AS ppi
    ON  pc.product_code = ppi.product_code
UNION ALL
SELECT
    p.article_id AS id
  , "VARIANT" AS type
  , pc.product_code AS primaryProductId
  , [ pc.product_category ] AS categories
  , pc.prod_name AS title
  , pc.detail_desc AS description
  , "en" AS languageCode
  , IF(ppi.product_code IS NULL, NULL, STRUCT(ppi.currencyCode, ppi.current_price AS price, ppi.max_price as originalPrice)) AS priceInfo
  , IF(ppi.product_code IS NULL, "OUT_OF_STOCK", "IN_STOCK") AS availability
FROM ${ ref({ schema: dataform.projectConfig.vars.BASE_DATA, name: "articles" }) } AS p
  INNER JOIN ${ ref({ schema: dataform.projectConfig.vars.BASE_DATA, name: "product_category" }) } AS pc
    ON  p.product_code = pc.product_code
  LEFT OUTER JOIN ${ ref({ schema: dataform.projectConfig.vars.BASE_DATA, name: "product_price_info" }) } AS ppi
    ON  p.product_code = ppi.product_code
