config {
  hasOutput: true,
  type: "operations",
  schema: dataform.projectConfig.vars.TARGET_DATA,
  description: "The Retail API Product Catalog is a collection of Product objects and associated metadata",
  dependencies: ["fashion_articles_assertions_uniqueKey_0"
               , "fashion_articles_assertions_rowConditions"
               , "fashion_product_category_assertions_uniqueKey_0"
               , "fashion_product_category_assertions_rowConditions"
               , "fashion_product_price_info_assertions_uniqueKey_0"
               , "fashion_product_price_info_assertions_rowConditions"],
  tags: ["TRANSFORM_RETAIL_DATA"]
}


CREATE OR REPLACE TABLE ${ self() }
(
    id                                 STRING NOT NULL
  , type                               STRING
  , primaryProductId                   STRING
  , categories                         ARRAY<STRING>
  , title                              STRING NOT NULL
  , description                        STRING
  , languageCode                       STRING
  , priceInfo                          STRUCT
      <
          currencyCode                 STRING
        , price                        FLOAT64
        , originalPrice                FLOAT64
      >
  , availability                       STRING
  , uri                                STRING
)
AS
SELECT
    pc.product_code AS id
  , "PRIMARY" AS type
  , pc.product_code AS primaryProductId
  , [ product_category ] AS categories
  , pc.prod_name AS title
  , pc.detail_desc AS description
  , "en" AS languageCode
  , IF(ppi.product_code IS NULL, NULL, STRUCT(ppi.currencyCode, ppi.current_price AS price, ppi.max_price as originalPrice)) AS priceInfo
  , IF(ppi.product_code IS NULL, "OUT_OF_STOCK", "IN_STOCK") AS availability
  , IF(ppi.product_code IS NULL, NULL, FORMAT("https://www2.hm.com/en_us/search-results.html?q=%s", pc.product_code)) AS uri
FROM ${ ref({ schema: dataform.projectConfig.vars.TARGET_DATA, name: "product_category" }) } AS pc
  LEFT OUTER JOIN ${ ref({ schema: dataform.projectConfig.vars.TARGET_DATA, name: "product_price_info" }) } AS ppi
    ON  pc.product_code = ppi.product_code
UNION ALL
SELECT
    a.article_id AS id
  , "VARIANT" AS type
  , pc.product_code AS primaryProductId
  , [ pc.product_category ] AS categories
  , pc.prod_name AS title
  , pc.detail_desc AS description
  , "en" AS languageCode
  , IF(ppi.product_code IS NULL, NULL, STRUCT(ppi.currencyCode, ppi.current_price AS price, ppi.max_price as originalPrice)) AS priceInfo
  , IF(ppi.product_code IS NULL, "OUT_OF_STOCK", "IN_STOCK") AS availability
  , IF(ppi.product_code IS NULL, NULL, FORMAT("https://www2.hm.com/en_us/productpage.%s.html", a.article_id)) AS uri
FROM ${ ref({ schema: dataform.projectConfig.vars.TARGET_DATA, name: "articles" }) } AS a
  INNER JOIN ${ ref({ schema: dataform.projectConfig.vars.TARGET_DATA, name: "product_category" }) } AS pc
    ON  a.product_code = pc.product_code
  LEFT OUTER JOIN ${ ref({ schema: dataform.projectConfig.vars.TARGET_DATA, name: "product_price_info" }) } AS ppi
    ON  a.product_code = ppi.product_code
