config {
  type: "table",
  schema: dataform.projectConfig.vars.TARGET_DATA,
  description: "Contains metadata for each `customer_id` in the dataset",
  dependOnDependencyAssertions: true,
  assertions: {
    uniqueKey: ["customer_id"],
    nonNull: ["customer_id"]
  },
  tags: ["TRANSFORM_DATA"]
}

CREATE OR REPLACE TABLE ${ self() }
(
    customer_id STRING NOT NULL,
    FN BOOL,
    Active BOOL,
    club_member_status STRING,
    fashion_news_frequency STRING,
    age INT64,
    postal_code STRING
)
AS
SELECT
    customer_id
  , IF(FN IS NULL, NULL, IF(FN="1.0", True, False)) AS FN
  , IF(Active IS NULL, NULL, IF(Active="1.0", True, False)) AS Active
  , club_member_status
  , fashion_news_frequency
  , CAST(age AS INT64) AS age
  , postal_code
FROM ${ ref({ schema: dataform.projectConfig.vars.RAW_DATA, name: "stg_customers" }) }
