config {
  type: "table",
  schema: dataform.projectConfig.vars.TARGET_DATA,
  description: "Contains the detailed metadata for each `article_id` available for purchase",
  dependOnDependencyAssertions: true,
  assertions: {
    uniqueKey: ["article_id"],
    nonNull: ["article_id"]
  },
  tags: ["TRANSFORM_DATA"]
}

CREATE OR REPLACE TABLE ${ self() }
(
    article_id STRING
    product_code STRING,
    prod_name STRING,
    product_type_no INT64,
    product_group_name STRING,
    product_type_name STRING,
    graphical_appearance_no INT64,
    graphical_appearance_name STRING,
    colour_group_code STRING,
    colour_group_name STRING,
    perceived_colour_value_id INT64,
    perceived_colour_value_name STRING,
    perceived_colour_master_id INT64,
    perceived_colour_master_name STRING,
    department_no INT64,
    department_name STRING,
    index_group_no INT64,
    index_group_name STRING,
    index_code STRING,
    index_name STRING,
    section_no INT64,
    section_name STRING,
    garment_group_no INT64,
    garment_group_name STRING,
    detail_desc STRING
)
AS
SELECT
    article_id
  , product_code
  , prod_name
  , CAST(product_type_no AS INT64) AS product_type_no
  , product_group_name
  , product_type_name
  , CAST(graphical_appearance_no AS INT64) AS graphical_appearance_no
  , graphical_appearance_name
  , colour_group_code
  , colour_group_name
  , CAST(perceived_colour_value_id AS INT64) AS perceived_colour_value_id
  , perceived_colour_value_name
  , CAST(perceived_colour_master_id AS INT64) AS perceived_colour_master_id
  , perceived_colour_master_name
  , CAST(department_no AS INT64) AS department_no
  , department_name
  , CAST(index_group_no AS INT64) AS index_group_no
  , index_group_name
  , index_code
  , index_name
  , CAST(section_no AS INT64) AS section_no
  , section_name
  , CAST(garment_group_no AS INT64) AS garment_group_no
  , garment_group_name
  , detail_desc
FROM ${ ref({ schema: dataform.projectConfig.vars.RAW_DATA, name: "stg_articles" }) }
